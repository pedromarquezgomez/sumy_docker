# ===========================================
# CONFIGURACIÓN DEL SISTEMA MCP AGENTIC RAG
# ===========================================

# ===== OPENAI CONFIGURATION =====
# Clave API de OpenAI (opcional pero recomendado para mejores respuestas)
# Obtén tu clave en: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# ===== VECTOR DATABASE CONFIGURATION =====
# Tipo de base de datos vectorial: 'chroma' (local) o 'pinecone' (cloud)
VECTOR_DB_TYPE=chroma

# ChromaDB (opción local - recomendada para desarrollo)
CHROMA_HOST=chromadb
CHROMA_PORT=8001

# Pinecone (opción cloud - para producción)
# Descomenta las siguientes líneas si usas Pinecone:
# PINECONE_API_KEY=your_pinecone_api_key_here
# PINECONE_ENVIRONMENT=your_pinecone_environment_here
# PINECONE_INDEX_NAME=agentic-rag-index

# ===== MEMORY SYSTEM CONFIGURATION =====
# URL de conexión a Redis para memoria persistente
REDIS_URL=redis://redis:6379

# Configuración adicional de Redis (opcional)
REDIS_PASSWORD=
REDIS_DB=0

# ===== SERVER URLS (para testing y desarrollo) =====
# URLs de los servidores MCP
RAG_SERVER_URL=http://rag-mcp-server:8000
MEMORY_SERVER_URL=http://memory-mcp-server:8000

# ===== EMBEDDING MODEL CONFIGURATION =====
# Modelo de embeddings a usar (opcional)
EMBEDDING_MODEL=all-MiniLM-L6-v2
# Otras opciones populares:
# EMBEDDING_MODEL=paraphrase-multilingual-MiniLM-L12-v2  # Mejor para múltiples idiomas
# EMBEDDING_MODEL=all-mpnet-base-v2  # Mejor calidad pero más lento

# ===== GENERATION CONFIGURATION =====
# Configuración para generación de respuestas con OpenAI
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_TEMPERATURE=0.3
OPENAI_MAX_TOKENS=1000

# ===== SYSTEM BEHAVIOR =====
# Configuración del comportamiento del sistema
MAX_SEARCH_RESULTS=5
MAX_QUERY_EXPANSIONS=4
CONVERSATION_HISTORY_LIMIT=50
MEMORY_CLEANUP_DAYS=30

# ===== LOGGING CONFIGURATION =====
# Nivel de logging: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# ===== SECURITY (para producción) =====
# Configuración de seguridad (descomenta para producción)
# JWT_SECRET_KEY=your_very_secure_secret_key_here
# CORS_ORIGINS=["http://localhost:3000", "https://yourdomain.com"]
# API_RATE_LIMIT=100  # requests per minute

# ===== DEVELOPMENT FLAGS =====
# Flags para desarrollo y testing
DEBUG_MODE=true
ENABLE_METRICS=true
ENABLE_HEALTH_CHECKS=true

# ===== OPTIONAL INTEGRATIONS =====
# Configuración para integraciones opcionales

# Anthropic Claude API (para comparación de modelos)
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Hugging Face (para modelos alternativos)
# HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# Weights & Biases (para tracking de experimentos)
# WANDB_API_KEY=your_wandb_api_key_here
# WANDB_PROJECT=mcp-agentic-rag

# ===== DATA PATHS =====
# Rutas para datos y archivos
KNOWLEDGE_BASE_PATH=./knowledge_base
DATA_PATH=./data
TEMP_PATH=./tmp

# ===== DOCKER CONFIGURATION =====
# Configuración específica para Docker
COMPOSE_PROJECT_NAME=mcp-agentic-rag
DOCKER_BUILDKIT=1

# ===== BACKUP CONFIGURATION =====
# Configuración para backups automáticos
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=7